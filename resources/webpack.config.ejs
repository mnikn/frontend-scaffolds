const path = require('path');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin')

module.exports = {
  entry: <% if (type === 'component' || type === 'lib') { %>'./examples/app.js'<% } else { %>'./src/index.<% if (lang === 'typescript') { %>ts<% } %><% if (lang === 'javascript') { %>js<% } %>'<% } %>,
  output: {
    filename: 'bundle.js',
    path: path.resolve(__dirname, 'examples-dist')
  },
  module: {
		rules: [
		<% if (lang === 'typescript') { %>
		{
			test: /\.ts$/,
			loader: 'awesome-typescript-loader'
		},<% } %>
		{
      test: /\.css$/,
      loader: 'style-loader!css-loader'
    }]
  },
  resolve: {
    alias: {
      src: path.resolve(__dirname, 'src/'),
      static: path.resolve(__dirname, 'static/')
    },
    extensions: ['.js', <% if (lang === 'typescript') { %>'.ts',<% } %>]
  },
  devtool: 'source-map',
  devServer: {
    contentBase: path.join(__dirname, 'examples-dist'),
    compress: true
  },
	plugins: [
		new HtmlWebpackPlugin({
      template: "./<% if (type === 'app') { %>public<% } %><% if (type === 'component' || type === 'lib') { %>examples<% } %>/index.html"
		}),
		new webpack.ProvidePlugin({
			$: 'jquery',
			_: 'lodash',
		}),
  ]
};